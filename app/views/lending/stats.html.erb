<%
  content_for(:page_title, 'UC BEARS: Statistics')
  # TODO: Rewrite as helper methods
  presenter = StatsPresenter.new
%>

<h1>UC BEARS (UC Berkeley Electronic and Accessible Reserves System)</h1>

<%# TODO: use Rails I18n %>
<section class="record">
  <table>
    <thead>
    <tr>
      <th>Sessions</th>
    </tr>
    </thead>

    <tbody>
    <% presenter.session_counts_by_type.each do |types, counts| %>
      <tr>
        <th><%= types.join(', ').capitalize %></th>
        <td>
          <%
            total_sessions = counts[:total_sessions]
            unique_users = counts[:unique_users]
          %>
          <%= total_sessions %>
          (<%= unique_users %> unique <%= 'user'.pluralize(unique_users) %>)
        </td>
      </tr>
    <% end %>
    <tr>
      <th>Total sessions</th>
      <td>
        <%
          total_sessions = presenter.session_count_total
          unique_users = presenter.session_unique_users
        %>
        <%= total_sessions %>
        (<%= unique_users %> unique <%= 'user'.pluralize(unique_users) %>)
      </td>
    </tr>
    </tbody>
    <tfoot>
    <tr>
      <td colspan="2">
        <strong>Notes:</strong>
        <ul>
          <%# TODO: style this properly %>
          <li style="list-style-position: inside; list-style-type: square;">"Faculty" represents all academic
            appointees, including librarians.
          </li>
          <li style="list-style-position: inside; list-style-type: square;">Some users fall into multiple types (e.g.,
            admin users are generally also staff or faculty).
          </li>
        </ul>
      </td>
    </tr>
    </tfoot>
  </table>

  <table>
    <thead>
    <tr>
      <th>Loans</th>
    </tr>
    </thead>

    <tbody>
    <tr>
      <th>Active</th>
      <td><%= presenter.loan_count_active %></td>
    </tr>
    <tr>
      <th>Complete</th>
      <td>
        <% complete_count = presenter.loan_count_complete %>
        <%= complete_count %>
        <%
          if complete_count > 0
            expired_count = presenter.loan_count_expired
            returned_count = complete_count - expired_count
        %>
          (<%= expired_count %> expired, <%= returned_count %> returned)
        <% end %>
      </td>
    </tr>
    <tr>
      <th>Median loan duration</th>
      <td>
        <% if (median_duration = presenter.loan_duration_median&.seconds) %>
          <%= distance_of_time_in_words(median_duration) %>
        <% else %>
          N/A
        <% end %>
      </td>
    </tr>
    <tr>
      <th>Total</th>
      <td><%= presenter.loan_count_total %></td>
    </tr>
    </tbody>
  </table>

  <table>
    <thead>
    <tr>
      <th>Items</th>
    </tr>
    </thead>

    <tbody>
    <% presenter.item_counts_by_state.each do |title, count| %>
      <tr>
        <th><%= title %></th>
        <td><%= count %></td>
      </tr>
    <% end %>
    </tbody>
  </table>

  <table>
    <thead>
    <tr>
      <th>Checkouts by date</th>
    </tr>
    </thead>
    <tbody>
    <% presenter.loan_stats_by_date.each do |date, item_stats| %>
      <tr>
        <th><%= l(date, format: :short) %></th>
        <td>
          <%# TODO: something smarter %>
          <% item_stats.reduce(nil) do |last_item_id, stats| %>
            <% stats.id.tap do |current_item_id| %>
              <% if current_item_id != last_item_id %>
                <p>
                  <%= stats.title %>
                  <%= stats.author %>
                  <%= stats.publisher %>
                  <%= stats.physical_desc %>
                </p>
              <% end %>
              <ul>
                <li><%= stats.loan_status %></li>
                <li><%= stats.loan_count %></li>
              </ul>
            <% end %>
          <% end %>
        </td>
      </tr>
    <% end %>
    </tbody>
  </table>

</section>
