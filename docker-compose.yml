services:
  app:
    build:
      context: .
      target: production
#    platform: linux/amd64
    depends_on:
      - db
      - iipsrv
      - selenium
      - selenium-chrome
    environment: &app-environment
      LIT_LENDING_ROOT: spec/data/lending
      LIT_IIIF_BASE_URL: http://iipsrv.test/iiif/
    init: true
    networks:
      default:
        aliases:
          - app.test
    volumes:
      - ./:/opt/app
    ports:
      - 3000:3000
    restart: always

# Uncomment this to build and run a ucbears-collector container
#
#  ucbears-collector:
#    build:
#      context: .
#      target: development
#    environment:
#      LIT_LENDING_ROOT: /ucbears
#      LIT_LENDING_COLLECTOR_STOP_FILE: collector-dev.stop
#      VIPS_DISC_THRESHOLD: 1g
#    ports: []
#    command: bin/lending/collect.rb
#    restart: "no"
#    volumes:
#      - ./spec/data/lending:/ucbears

  db:
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
    image: postgres:12.2
    networks:
      default:
        aliases:
          - db.test
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./:/build:rw

  iipsrv:
    image: containers.lib.berkeley.edu/lap/iipsrv/main:latest
    init: true
    environment:
      - VERBOSITY=6
      - LOGFILE=/dev/stdout
      - FILESYSTEM_PREFIX=/iipsrv-data/
      - CORS=*
    volumes:
      - type: bind
        source: ./iipsrv-data
        target: /iipsrv-data
    ports:
      - 80:80
    platform: linux/amd64
    networks:
      default:
        aliases:
          - iipsrv.test

  selenium:
    image: selenium/hub
    networks:
      default:
        aliases:
          - selenium.test
    ports:
      - 4444:4444
    volumes:
      - ./:/build:rw

  selenium-chrome:
    depends_on:
      - selenium
    environment:
      HUB_HOST: selenium
    image: selenium/node-chrome-debug
    ports:
      # @note Use `open vnc://localhost:55900` to view the chrome session.
      #       Doesn't work if you pass the "headless" option via Capybara.
      #       Password = "secret"
      - 55900:5900
    volumes:
      - /dev/shm:/dev/shm:rw
      - ./:/build:rw

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  postgres_data: { }

version: '3.8'
